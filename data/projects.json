[
  {
    "name": "Менеджер задач",
    "link": "https://github.com/remortalite/python-project-52",
    "stack_str": "python, Django, postgresql, django orm, poetry",
    "description": "Приложение даёт возможность зарегистрированным пользователям создавать, изменять и удалять задачи, а также связанные с ними элементы. Также проект поддерживает ведение статусов задач и создание меток.",
    "skills": [
      "Создание приложения с использованием фреймворка Django",
      "Практика навыков работы в Django ORM",
      "Тестирование приложения с помощью встроенных средств Django"
    ]
  },
  {
    "name": "Анализатор страниц",
    "link": "https://github.com/remortalite/page_analyzer",
    "stack_str": "python, Flask, poetry, pytest, beautifulsoup4",
    "description": "Приложение предназначено для проверки сайтов на доступность, а также вывода основных параметров сайта (заголовки, код ответа, описание сайта если указано). Проект написан на Flask с использованием PostgreSQL и библиотеки BeautifulSoup4. ",
    "skills": [
      "Создание приложения на базе фреймворка Flask",
      "Использование базы данных PostgreSQL (библиотека psycopg2)",
      "Написание тестов для веб-приложения",
      "Парсинг html страницы средствами библиотеки beautifulsoup"
    ]
  },
  {
    "name": "Генератор отличий",
    "link": "https://github.com/remortalite/gendiff",
    "stack_str": "python, git, poetry, pytest, flake8",
    "description": "Программа для рекурсивного вычисления различий между двумя файлами форматов json или yaml. Позволяет указать выходной формат: stylish, json или plain. ",
    "skills": [
      "Создание консольного приложения, получение аргументов командной строки",
      "Рекурсивный обход дерева в Python",
      "Практика poetry, pytest",
      "Использование библиотек для чтения json/yaml файлов",
      "Работа с файлами, чтение и запись"
    ]
  },
  {
    "name": "Интерпретатор машины Тьюринга",
    "link": "https://github.com/remortalite/turing_machine_interpreter",
    "stack_str": "C, Make, Makefile, Github CI, Git",
    "description": "Учебный проект. Программа позволяет запускать команды для машины Тьюринга на произвольных данных. Проект разрабатывался совместно с одногруппником, для командной работы применяли git и github, а также github Actions для автоматизации форматирования и тестирования. Проект написан на чистом Си. Сборка производится утилитой Make. ",
    "skills": [
      "Командная работа с использованием Git",
      "Использование GitHub для совместной работы",
      "Автоматизация с GitHub Actions",
      "Написание кода на языке Си",
      "Использование утилиты Make для сборки проекта",
      "Написание документации, планирование работы",
      "Написание тестов"
    ]
  }
]